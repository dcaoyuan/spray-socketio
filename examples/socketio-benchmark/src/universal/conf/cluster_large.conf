akka {
  loglevel = INFO
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]

  log-config-on-start = off
}

akka.cluster {
  auto-down-unreachable-after = 2s

  failure-detector {
    acceptable-heartbeat-pause = 6 s # default 3 s
    threshold = 12.0    # default 8.0
  }

  scheduler {
    tick-duration = 9ms # default 33ms
    ticks-per-wheel = 512 # default 512
  } 

  use-dispatcher = cluster-dispatcher
}

cluster-dispatcher {
  type = "Dispatcher"
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-max = 4
  }
}

akka.scheduler {
  tick-duration = 10ms # default 10ms
  ticks-per-wheel = 512 # default 512
}

akka.io {
  tcp {
    nr-of-selectors = 2
    max-channels = unlimited
  }
}

akka.remote {
  #log-remote-lifecycle-events = on
  
  transport-failure-detector {
    heartbeat-interval = 30 s   # default 4s
    acceptable-heartbeat-pause = 5 s  # default 10s
  }

  netty {
    server-socket-worker-pool {
      pool-size-min = 2 # default 2 
      pool-size-factor = 1.0 # default 1.0
      pool-size-max = 24 # default 2
    }
  }
}

akka.cluster.pub-sub {
  gossip-interval = 3s  # default 1s
}

akka.extensions = ["akka.cluster.client.ClusterClientReceptionist"]

# check the reference.conf in spray-can/src/main/resources for all defined settings
spray.can.server {
  # uncomment the next line for making this an HTTPS example
  #ssl-encryption = on
  idle-timeout = infinite
  registration-timeout = 100s
  request-timeout = infinite

  request-chunk-aggregation-limit = 0

  parsing.max-content-length = 5g
  parsing.incoming-auto-chunking-threshold-size = 45k
}

spray.can.client {
  idle-timeout = infinite
  connecting-timeout = 100s
}

spray.websocket {
  pmce = []
}

spray.socketio {

  server {
    supported-transports = "websocket,xhr-polling"
    #supported-transports = "xhr-polling"

    # seconds
    heartbeat-interval = 30

    # seconds
    heartbeat-timeout = 60

    # seconds
    close-timeout = 60

    # seconds
    actor-selection-resolve-timeout = 100

    # seconds
    topic-subscribe-timeout = 30
  }

}

spray.socketio.benchmark {

  server {
    host = "localhost"
    port = 8080
  }

  client {
    addresses = ["localhost:8080"]

    concurrencyLevels = [6000]

    post-test-reception-timeout = 30

    create-bunch-clients-timeout = 30

    initail-messages-sent-per-second = 5000

    max-messages-sent-per-second = 200000

    messages-sent-per-second-ramp = 1000

    seconds-to-test-each-load-state = 1

    seconds-between-rounds = 2
  }

  broadcast = false
}

akka.actor.provider = "akka.cluster.ClusterActorRefProvider"
akka.cluster.sharding.role = "connectionSession"
transport.host = "0.0.0.0"
transport.port = 8080
spray.socketio.mode = "cluster"

spray.socketio.server.enable-connectionsession-persistence = true

#akka.persistence.journal.plugin = "akka.persistence.journal.leveldb-shared"
#akka.persistence.journal.leveldb-shared.store.dir = "target/test-shared-journal"
#akka.persistence.snapshot-store.local.dir = "target/test-snapshots"

akka.persistence.journal.plugin = "cassandra-journal"
akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"
